variables:
    GIT_STRATEGY: clone
    GIT_CLEAN_FLAGS: -ffdx

    MAJOR_VERSION: "1"
    MINOR_VERSION: "1"
    PATCH_VERSION: "0"
    BUILD_NUMBER: $CI_PIPELINE_IID

    CY_BOOTLOADER_MAJOR: 1
    CY_BOOTLOADER_MINOR: 1
    CY_BOOTLOADER_REV: 0
    CY_BOOTLOADER_BUILD: $CI_PIPELINE_IID

.cleanup_build_params: &cleanup_build_params
    - unset APP_NAME
    - unset APP_SUFX
    - unset HEX_NAME
    - unset SLOT
    - unset TARGET
    - unset PLATFORM
    - unset BUILDCFG
    - unset IMG_TYPE
    - unset MULTI_IMAGE
    - unset MAKEINFO
    - unset POST_BUILD
    - unset HEADER_OFFSET
    - unset DEFINES_USER

.make_cybootloader_app: &make_cybootloader_app
    # Collect CypressBootloader for ${PLATFORM}
    - echo '================================================================================================='
    - echo '=== Build CypressBootloader application'
    - echo '=== PLATFORM = $PLATFORM, BUILDCFG = $BUILDCFG, MAKEINFO = $MAKEINFO'
    - echo '================================================================================================='
    - export APP_NAME=CypressBootloader
    - export HEX_NAME=CypressBootloader_CM0p
    - export DEFINES_USER='-DCY_BOOTLOADER_MAJOR=${CY_BOOTLOADER_MAJOR} -DCY_BOOTLOADER_MINOR=${CY_BOOTLOADER_MINOR} -DCY_BOOTLOADER_REV=${CY_BOOTLOADER_REV} -DCY_BOOTLOADER_BUILD=${CY_BOOTLOADER_BUILD}'
    - export SLOT=''
    # - *make_signed_app
    - cd boot/cypress
    - make clean APP_NAME=$APP_NAME
    - make app APP_NAME=$APP_NAME PLATFORM=$PLATFORM BUILDCFG=$BUILDCFG MAKEINFO=$MAKEINFO POST_BUILD=0
    - cd ../..
    - mkdir -p ./deploy/$PLATFORM/$APP_NAME/$BUILDCFG
    - mkdir -p ./develop/$PLATFORM/$APP_NAME/$BUILDCFG
    #
    # - cp -r boot/cypress/$APP_NAME/out/$PLATFORM/$BUILDCFG/$HEX_NAME.hex ./deploy/$PLATFORM/$APP_NAME/$BUILDCFG/
    # - sh cysign_bootloader -f ./deploy/$PLATFORM/$APP_NAME/$BUILDCFG/$HEX_NAME.hex -n PSOC6A_2M
    - sh cysign_bootloader -f boot/cypress/$APP_NAME/out/$PLATFORM/$BUILDCFG/$HEX_NAME.hex -n $PLATFORM -v ${CY_BOOTLOADER_MAJOR}.${CY_BOOTLOADER_MINOR}.${CY_BOOTLOADER_REV}.${CY_BOOTLOADER_BUILD}

    # Collect CypressBootloader for ${PLATFORM} develop
    - cp -r boot/cypress/$APP_NAME/out/$PLATFORM/$BUILDCFG/*.hex ./develop/$PLATFORM/$APP_NAME/$BUILDCFG/
    - cp -r boot/cypress/$APP_NAME/out/$PLATFORM/$BUILDCFG/*.lst ./develop/$PLATFORM/$APP_NAME/$BUILDCFG/
    - cp -r boot/cypress/$APP_NAME/out/$PLATFORM/$BUILDCFG/*.elf ./develop/$PLATFORM/$APP_NAME/$BUILDCFG/
    - cp -r boot/cypress/$APP_NAME/out/$PLATFORM/$BUILDCFG/*.map ./develop/$PLATFORM/$APP_NAME/$BUILDCFG/

    # Collect Signed application for ${PLATFORM} deploy
    - cp -r boot/cypress/$APP_NAME/out/$PLATFORM/$BUILDCFG/$HEX_NAME.hex ./deploy/$PLATFORM/$APP_NAME/$BUILDCFG/
    - cp -r ./signed/*.jwt ./deploy/$PLATFORM/$APP_NAME/$BUILDCFG/
    - cp -r ./signed/*.jwt ./develop/$PLATFORM/$APP_NAME/$BUILDCFG/

    
.make_boot_app: &make_boot_app
    - set -vx
    # Build boot application
    - export APP_BUILD_OPTIONS=''
    - echo '================================================================================================='
    - echo '=== Build ${APP_NAME} application'
    - echo '=== Platform = ${PLATFORM}, BUILDCFG = ${BUILDCFG}, IMG_TYPE=${IMG_TYPE}, MAKEINFO = ${MAKEINFO}, POST_BUILD=${POST_BUILD}'
    - echo '================================================================================================='
    - export SLOT=`echo $IMG_TYPE | awk '{print tolower($0)}'`
    - if [ $SLOT == 'upgrade' ]; then export SUFX=_$SLOT; else export SUFX=''; fi
    - if [ ! -z $MULTI_IMAGE ]; then if [ $MULTI_IMAGE -eq 0 ]; then export APP_SUFX=''; export APP_BUILD_OPTIONS+='MULTI_IMAGE=0 '; fi; fi
    - if [ ! -z $HEADER_OFFSET ]; then export APP_BUILD_OPTIONS+=HEADER_OFFSET=$HEADER_OFFSET; fi
    - if [ -z $HEX_NAME ]; then export HEX_NAME=$APP_NAME; fi
    - export APP_BUILD_OPTIONS+=$BUILD_OPTIONS
    - mkdir -p  ./deploy/$PLATFORM/$APP_NAME$APP_SUFX/$BUILDCFG/$SLOT
    - mkdir -p  ./develop/$PLATFORM/$APP_NAME$APP_SUFX/$BUILDCFG/$SLOT
    - cd boot/cypress
    - make clean APP_NAME=$APP_NAME
    - make app APP_NAME=$APP_NAME PLATFORM=$PLATFORM BUILDCFG=$BUILDCFG MAKEINFO=$MAKEINFO IMG_TYPE=$IMG_TYPE $APP_BUILD_OPTIONS POST_BUILD=$POST_BUILD
    - cd ../..

    # Collect App for develop
    - cp -r boot/cypress/$APP_NAME/out/$PLATFORM/$BUILDCFG/$SLOT/*.hex  ./develop/$PLATFORM/$APP_NAME$APP_SUFX/$BUILDCFG/$SLOT/
    - cp -r boot/cypress/$APP_NAME/out/$PLATFORM/$BUILDCFG/$SLOT/*.lst  ./develop/$PLATFORM/$APP_NAME$APP_SUFX/$BUILDCFG/$SLOT/
    - cp -r boot/cypress/$APP_NAME/out/$PLATFORM/$BUILDCFG/$SLOT/*.elf  ./develop/$PLATFORM/$APP_NAME$APP_SUFX/$BUILDCFG/$SLOT/
    - cp -r boot/cypress/$APP_NAME/out/$PLATFORM/$BUILDCFG/$SLOT/*.map  ./develop/$PLATFORM/$APP_NAME$APP_SUFX/$BUILDCFG/$SLOT/

    # Collect App for deploy
    - cp -r boot/cypress/$APP_NAME/out/$PLATFORM/$BUILDCFG/$SLOT/${HEX_NAME}_unsigned.hex ./deploy/$PLATFORM/$APP_NAME$APP_SUFX/$BUILDCFG/$SLOT/${HEX_NAME}_unsigned.hex

stages:
  - build_mac
  - cppcheck
  - test
  - sim
  - deploy
  
  
#######################################################################################################################################################
##################------------------------------------------------ BUILDS ------------------------------------------------#############################
#######################################################################################################################################################

mac_build_512K_bootloader:
  stage: build_mac
  tags:
    - MBED_TEST_MAC1014

  variables:
    TOOLCHAIN_PATH: /Applications/ModusToolbox/tools_2.0/gcc-7.2.1

  before_script:
    - python3 --version
    - export https_proxy=http://proxy.ua.cypress.com:8080

  script:
    # install cysecuretools for post build actions
    - python3 -m pip install pyserial
    - python3 -m pip uninstall cysecuretools -y
    - python3 -m pip install --upgrade --force-reinstall git+http://git-ore.aus.cypress.com/repo/cysecuretools.git@v1.4.0-es10.3-tc1
    # - python3 -m pip install --upgrade --force-reinstall git+http://git-ore.aus.cypress.com/repo/pyocd.git@88efb3bbb56a0bedf2ad0917098463a13bcbe00d

    - pwd
    - git submodule deinit --all -f
    - git submodule update --init --recursive
    
    
    # Build CypressBootloader for PSOC_064_512K family
    - *cleanup_build_params
    
    - export PLATFORM=PSOC_064_512K
    - export BUILDCFG=Debug
    - export MAKEINFO=1
    - *make_cybootloader_app

    - export PLATFORM=PSOC_064_512K
    - export BUILDCFG=Release
    - export MAKEINFO=0
    - *make_cybootloader_app

    - cd boot/cypress
    - make clean APP_NAME=CypressBootloader
    - cd ../..

  artifacts:
    expire_in: 1 weeks
    paths:
      - deploy
      - develop
      
      
mac_build_512K_Multi_BlinkyApp:
  stage: build_mac
  tags:
    - MBED_TEST_MAC1014

  variables:
    TOOLCHAIN_PATH: /Applications/ModusToolbox/tools_2.0/gcc-7.2.1

  before_script:
    - python3 --version
    - export https_proxy=http://proxy.ua.cypress.com:8080

  script:
    # install cysecuretools for post build actions
    - python3 -m pip install pyserial
    - python3 -m pip uninstall cysecuretools -y
    - python3 -m pip install --upgrade --force-reinstall git+http://git-ore.aus.cypress.com/repo/cysecuretools.git@v1.4.0-es10.3-tc1
    # - python3 -m pip install --upgrade --force-reinstall git+http://git-ore.aus.cypress.com/repo/pyocd.git@88efb3bbb56a0bedf2ad0917098463a13bcbe00d

    - pwd
    - git submodule deinit --all -f
    - git submodule update --init --recursive
    

    ########################### BlinkyApp BOOT MULTI-IMAGE ##############################
    # Build BlinkyApp BOOT for PSOC_064_512K
    - *cleanup_build_params
    - export APP_SUFX='Multi'

    - export APP_NAME=BlinkyApp
    - export PLATFORM=PSOC_064_512K
    - export IMG_TYPE=BOOT
    - export MULTI_IMAGE=1
    - export MAKEINFO=0

    - export BUILDCFG=Debug
    - *make_boot_app

    - export BUILDCFG=Release
    - *make_boot_app

    ########################### BlinkyApp UPGRADE MULTI-IMAGE ##############################
    # Build BlinkyApp UPGRADE for PSOC_064_512K
    - export HEADER_OFFSET='0x10000'
    - export IMG_TYPE=UPGRADE

    - export BUILDCFG=Debug
    - *make_boot_app

    - export BUILDCFG=Release
    - *make_boot_app

    - cd boot/cypress
    - make clean APP_NAME=BlinkyApp
    - cd ../..

  artifacts:
    expire_in: 1 weeks
    paths:
      - deploy
      - develop
      
      
mac_build_512K_SecureBlinkyApp:
  stage: build_mac
  tags:
    - MBED_TEST_MAC1014

  variables:
    TOOLCHAIN_PATH: /Applications/ModusToolbox/tools_2.0/gcc-7.2.1

  before_script:
    - python3 --version
    - export https_proxy=http://proxy.ua.cypress.com:8080

  script:
    # install cysecuretools for post build actions
    - python3 -m pip install pyserial
    - python3 -m pip uninstall cysecuretools -y
    - python3 -m pip install --upgrade --force-reinstall git+http://git-ore.aus.cypress.com/repo/cysecuretools.git@v1.4.0-es10.3-tc1
    # - python3 -m pip install --upgrade --force-reinstall git+http://git-ore.aus.cypress.com/repo/pyocd.git@88efb3bbb56a0bedf2ad0917098463a13bcbe00d

    - pwd
    - git submodule deinit --all -f
    - git submodule update --init --recursive

    ########################### SecureBlinkyApp BOOT ##############################
    # Build SecureBlinkyApp BOOT for PSOC_064_512K
    - *cleanup_build_params

    - export APP_NAME=SecureBlinkyApp
    - export PLATFORM=PSOC_064_512K
    - export IMG_TYPE=BOOT
    - export MAKEINFO=0

    - export BUILDCFG=Debug
    - *make_boot_app

    - export BUILDCFG=Release
    - *make_boot_app


    ########################### SecureBlinkyApp UPGRADE ##############################
    # Build SecureBlinkyApp UPGRADE for PSOC_064_512K

    - export HEADER_OFFSET='0x10000'
    - export IMG_TYPE=UPGRADE

    - export BUILDCFG=Debug
    - *make_boot_app

    - export BUILDCFG=Release
    - *make_boot_app

    - cd boot/cypress
    - make clean APP_NAME=SecureBlinkyApp
    - cd ../..

  artifacts:
    expire_in: 1 weeks
    paths:
      - deploy
      - develop


mac_build_512K_BlinkyApp:
  stage: build_mac
  tags:
    - MBED_TEST_MAC1014

  variables:
    TOOLCHAIN_PATH: /Applications/ModusToolbox/tools_2.0/gcc-7.2.1

  before_script:
    - python3 --version
    - export https_proxy=http://proxy.ua.cypress.com:8080

  script:
    # install cysecuretools for post build actions
    - python3 -m pip install pyserial
    - python3 -m pip uninstall cysecuretools -y
    - python3 -m pip install --upgrade --force-reinstall git+http://git-ore.aus.cypress.com/repo/cysecuretools.git@v1.4.0-es10.3-tc1
    # - python3 -m pip install --upgrade --force-reinstall git+http://git-ore.aus.cypress.com/repo/pyocd.git@88efb3bbb56a0bedf2ad0917098463a13bcbe00d

    - pwd
    - git submodule deinit --all -f
    - git submodule update --init --recursive

    ########################### BlinkyApp BOOT ##############################
    # Build BlinkyApp BOOT for PSOC_064_512K
    - *cleanup_build_params

    - export APP_NAME=BlinkyApp
    - export PLATFORM=PSOC_064_512K
    - export IMG_TYPE=BOOT
    - export MULTI_IMAGE=0
    - export MAKEINFO=0

    - export BUILDCFG=Debug
    - *make_boot_app

    - export BUILDCFG=Release
    - *make_boot_app

    ########################### BlinkyApp UPGRADE ##############################
    # Build BlinkyApp UPGRADE for PSOC_064_512K

    - export HEADER_OFFSET='0x10000'
    - export IMG_TYPE=UPGRADE

    - export BUILDCFG=Debug
    - *make_boot_app

    - export BUILDCFG=Release
    - *make_boot_app

  artifacts:
    expire_in: 1 weeks
    paths:
      - deploy
      - develop



mac_test_512K:
  stage: test
  tags:
    - MBED_TEST_MAC1014
  dependencies:
    - mac_build_512K_bootloader
    - mac_build_512K_Multi_BlinkyApp
    - mac_build_512K_SecureBlinkyApp
    - mac_build_512K_BlinkyApp
  script:
    - export https_proxy=http://proxy.ua.cypress.com:8080
    - python3 --version
    - virtualenv venv
    - source venv/bin/activate
    - python3 -m pip install pyserial
    - python3 -m pip install --upgrade --force-reinstall git+http://git-ore.aus.cypress.com/repo/cysecuretools.git@v1.4.0-es10.3-tc1
    # - pip install --upgrade --force-reinstall git+http://git-ore.aus.cypress.com/repo/pyocd.git@88efb3bbb56a0bedf2ad0917098463a13bcbe00d
    - pwd
    - rm -rf ./venv/lib/python3.7/site-packages/cysecuretools/targets/cyb06xx5/prebuilt/CyBootloader_Release
    - rm ./venv/lib/python3.7/site-packages/cysecuretools/targets/cyb06xx5/prebuilt/CyBootloader_WithLogs/CypressBootloader_CM0p.jwt
    - rm ./venv/lib/python3.7/site-packages/cysecuretools/targets/cyb06xx5/prebuilt/CyBootloader_WithLogs/CypressBootloader_CM0p.hex
    - cp -r ./develop/PSOC_064_512K/CypressBootloader/Debug/*.hex ./venv/lib/python3.7/site-packages/cysecuretools/targets/cyb06xx5/prebuilt/CyBootloader_WithLogs/
    - cp -r ./develop/PSOC_064_512K/CypressBootloader/Debug/*.jwt ./venv/lib/python3.7/site-packages/cysecuretools/targets/cyb06xx5/prebuilt/CyBootloader_WithLogs/

    - echo "[INFO] Start tests"

    - '[ -d tests ] && echo "[INFO] Directory tests exists." || echo "[INFO] Directory tests does not exists." && git clone http://git-ore.aus.cypress.com/repo/cy_mcuboot_project/cy_mcuboot.git tests && cd tests && git checkout tests && git branch && cd .. '
    - cd tests
    - mbedls -j > mbedls_data.json
    - pwd

    - echo "[INFO] Test provisioning using single stage policy (CM4), CyBootloader WithLogs"
    - python3 -m unittest test_provisioning.TestProvisioning.test_provision_512k_release_single_image

    - cd ..
    - rm -rf tests

    - '[ -d tests ] && echo "[INFO] Directory tests exists." || echo "[INFO] Directory tests does not exists." && git clone http://git-ore.aus.cypress.com/repo/cy_mcuboot_project/cy_mcuboot.git tests && cd tests && git checkout tests && git branch && cd .. '
    - cd tests
    - mbedls -j > mbedls_data.json
    - pwd

    - echo "[INFO] Test provisioning multi image, CyBootloader WithLogs"
    - python3 -m unittest test_provisioning.TestProvisioning.test_provision_512k_release_muilti_image

    - cd ..
    - rm -rf tests

    - deactivate

  artifacts:
    expire_in: 1 weeks
    paths:
      - deploy




# static code analyzer with Cppcheck tool
win_cpp_check:
  stage: cppcheck
  tags:
    - MBED_TEST
  script:
    - cd boot/cypress/libs/bsp
    - git clone http://git-ore.aus.cypress.com/repo-staging/TARGET_CY8CPROTO-062-4343W.git
    - cd ../../../../
    - cd boot/cypress
    - make run_cppcheck
    - cd ../../
  when: always
  

.MCUboot_simulator:
  stage: sim
  tags:
    - FW_SECURITY_TEST_UBUNTU1804
  script:
    - export https_proxy=http://proxy.ua.cypress.com:8080
    - python3 --version
    - pwd
    - git submodule deinit --all -f
    - git submodule update --init --recursive
    - cd sim
    - cargo test --verbose


# Upload build artifacts to http://iot-webserver.aus.cypress.com/projects/iot_release/ASSETS/repo/mcuboot/
deploy_asset:
  stage: deploy
  tags:
    - devops-assets
  dependencies:
    # - mac_test_512K
  only:
    - /^develop$/
    - /^cypress$/
    - /^integration/cy_bootloader$/
    - /^feature/kosx-CI-1028$/
  script:
    - git clone git@git-ore.aus.cypress.com:devops/devops_scripts.git
    - bash devops_scripts/job_deploy_to_assets.sh
